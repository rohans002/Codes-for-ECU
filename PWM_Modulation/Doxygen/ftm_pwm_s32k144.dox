/*!
    @page ftm_pwm_s32k144_group FTM PWM
    @brief Example application showing the FTM's PWM functionality

    ## Application description ##
    ______
    The purpose of this demo application is to show you the usage of the PWM mode of the FlexTimer module
    on S32K144 using S32 SDK API

    The examples does the following operations:
    - Increment or decrement duty cycle
    - Update channel duty cycle
    - Wait for a number of cycles to make the change visible

    Run the example:
      1. After run debug, the RED LED of EVB board will increment or decrement light intensity
      2. Use oscilloscope to verify the output signal

    ## Prerequisites ##
    ______
    To run the example you will need to have the following items:
    - 1 S32K144 board
    - 1 Power Adapter 12V (if the board cannot be powered from the USB port)
    - 1 Personal Computer
    - 1 Jlink Lite Debugger (optional, users can use Open SDA)

    ## Boards supported ##
    ______
    The following boards are supported by this application:
    - S32K144EVB-Q100
    - S32K144-MB

    ## Hardware Wiring ##
    ______
    The following connections must be done to for this example application to work:

    PIN FUNCTION              | S32K144EVB-Q100              | S32K144-MB      |
    --------------------------|------------------------------|-----------------|
    FTM0 Channel 0 (\b PTD15) | RGB_RED - wired on the board | J11.31 - J12.18 |

    ## How to run ##
    ______

    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New \b S32DS \b Project \b From... and select \b ftm_pwm_s32k144. Then click on \b Finish. \n
    The project should now be copied into your current workspace.

    #### 2. Generating the S32 configuration ####
    The example will run without an active configuration, however if any changes are required, a configuration needs to be generated.
    The initial configuration will have the same settings as the default example settings.
    First go to \b Project \b Explorer View in S32 DS and select the current project(\b ftm_pwm_s32k144).
    Right click on the current project ->" S32 Configuration Tool" menu then click on the desired configuration (Pins, Cocks, Peripherals etc...).
    Clicking on any one of those will generate all the components.
    Make the desired changes(if any) then click on the "ConfigTools->Update Code" button.

    #### 3. Building the project ####
    Select the configuration \b FLASH (Debug_FLASH) or \b RAM (Debug_RAM) to be built by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png).
    Wait for the build action to be completed before continuing to the next step.

    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There are four debug configurations for this project:
     Configuration Name                     | Description                                               |
     ---------------------------------------|-----------------------------------------------------------|
     \b ftm_pwm_s32k144_debug_ram_pemicro   | Debug the RAM   configuration using PEMicro debugger      |
     \b ftm_pwm_s32k144_debug_flash_pemicro | Debug the FLASH configuration using PEMicro debugger      |
     \b ftm_pwm_s32k144_debug_ram_jlink     | Debug the RAM   configuration using Segger Jlink debugger |
     \b ftm_pwm_s32k144_debug_flash_jlink   | Debug the FLASH configuration using Segger Jlink debugger |
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.

    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.
*/
